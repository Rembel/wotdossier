<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="office2007SilverRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="13" Height="13">
                                    <Ellipse Name="EllipseOutside" Fill="{StaticResource checkBoxOutsideBorderDefaultBackgroundBrush}" Stroke="{StaticResource checkBoxOutsideBorderDefaultBorderBrush}" StrokeThickness="1" />
                                    <Ellipse Name="EllipseInside" Fill="{StaticResource checkBoxInsideBorderDefaultBackgroundBrush}" Stroke="{StaticResource checkBoxInsideBorderDefaultBorderBrush}" StrokeThickness="1" HorizontalAlignment="Stretch" Margin="2,2,2,2" Width="Auto" />
                                    <Ellipse Name="boundEllipse" Fill="{TemplateBinding Background}" Opacity="0.3" />
                                    <Ellipse Name="CheckMark" Margin="4" Fill="{StaticResource glyphDefaultBordeBrush}" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" TextBlock.Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="true" />
                        </BulletDecorator>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsMouseOverBorderBrush}" Property="Stroke" />
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsMouseOverBackgroundBrush}" Property="Fill" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsMouseOverBorderBrush}" Property="Stroke" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsMouseOverBackgroundBrush}" Property="Fill" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsPressedBackgroundBrush}" Property="Fill" />
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsPressedBorderBrush}" Property="Stroke" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsPressedBackgroundBrush}" Property="Fill" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsPressedBorderBrush}" Property="Stroke" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Value="{StaticResource checkBoxForegroundIsEnabledBrush}" Property="Foreground" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsEnabledBorderBrush}" Property="Stroke" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsEnabledBackgroundBrush}" Property="Fill" />
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsEnabledBackgroundBrush}" Property="Fill" />
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsEnabledBorderBrush}" Property="Stroke" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="office2007SilverHorizontalProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
            <Rectangle Fill="{TemplateBinding Background}" RadiusY="2" RadiusX="2"/>
            <Border Background="{StaticResource ProgressBarGlassyHighlight}" CornerRadius="2" Margin="1"/>
            <Border BorderBrush="#80FFFFFF" BorderThickness="1,0,1,1" Background="{StaticResource ProgressBarTopHighlight}" Margin="1"/>
            <Rectangle x:Name="PART_Track" Margin="1"/>
            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
                <Grid x:Name="Foreground">
                    <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                    <Grid x:Name="Animation" ClipToBounds="true">
                        <Rectangle x:Name="PART_GlowRect" Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="100"/>
                    </Grid>
                    <Grid x:Name="Overlay">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="15"/>
                            <ColumnDefinition Width="0.1*"/>
                            <ColumnDefinition MaxWidth="15"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="LeftDark" Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft}" Margin="1,1,0,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2"/>
                        <Rectangle x:Name="RightDark" Grid.Column="2" Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight}" Margin="0,1,1,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2"/>
                        <Rectangle x:Name="LeftLight" Grid.Column="0" Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft}" Grid.Row="2"/>
                        <Rectangle x:Name="CenterLight" Grid.Column="1" Fill="{StaticResource ProgressBarIndicatorLightingEffect}" Grid.Row="2"/>
                        <Rectangle x:Name="RightLight" Grid.Column="2" Fill="{StaticResource ProgressBarIndicatorLightingEffectRight}" Grid.Row="2"/>
                        <Border x:Name="Highlight1" Background="{StaticResource ProgressBarIndicatorGlassyHighlight}" Grid.ColumnSpan="3" Grid.RowSpan="2"/>
                        <Border x:Name="Highlight2" Background="{StaticResource ProgressBarTopHighlight}" Grid.ColumnSpan="3" Grid.RowSpan="2"/>
                    </Grid>
                </Grid>
            </Decorator>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
            <TextBlock Foreground="Black" FontWeight="Medium" FontSize="10"  Grid.Column="0" TextAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ProgressBar}}, Path=Value, StringFormat='\{0:0.} %'}" />                    
            </TextBlock>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                    <Setter.Value>
                        <RotateTransform Angle="-90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsIndeterminate" Value="true">
                <Setter Property="Visibility" TargetName="LeftDark" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="RightDark" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="LeftLight" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="CenterLight" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="RightLight" Value="Collapsed"/>
                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsIndeterminate" Value="false">
                <Setter Property="Background" TargetName="Animation" Value="#80B5FFA9"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="office2007SilverProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#01D328"/>
        <Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template" Value="{StaticResource office2007SilverHorizontalProgressBarTemplate}" />
    </Style>

</ResourceDictionary>