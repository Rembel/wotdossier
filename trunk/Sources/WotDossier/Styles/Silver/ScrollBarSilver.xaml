<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="increaseDecreaseRepeatButtonOffice2007Silver" TargetType="{x:Type RepeatButton}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="Border" Background="{StaticResource buttonOutsideBorderDefaultBackgroundBrush}"
                    BorderBrush="{StaticResource buttonOutsideBorderDefaultBorderBrush}" BorderThickness="1,1,1,1">
                            <Border x:Name="border" Margin="0,0,0,0" Width="Auto" Height="Auto" BorderBrush="#FFFFFFFF"
                      BorderThickness="1,1,1,1"/>
                        </Border>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center"
                              Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource buttonOutsideBorderIsMouseOverBackgroundBrush}"
                      Property="Border.Background"/>
                            <Setter TargetName="Border" Value="{StaticResource buttonOutsideBorderDefaultBorderBrush}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="border" Value="{StaticResource buttonOutsideBorderIsMouseOverBorderBrush}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="border" Value="{x:Null}" Property="Border.Background"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource buttonOutsideBorderIsPressedBackgroundBrush}"
                      Property="Border.Background"/>
                            <Setter TargetName="Border" Value="{StaticResource buttonOutsideBorderDefaultBorderBrush}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="border" Value="{StaticResource buttonOutsideBorderIsPressedBorderBrush}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Value="{StaticResource DisabledForegroundBrush}" Property="Control.Foreground"/>
                            <Setter TargetName="Border" Value="{StaticResource buttonOutsideBorderDisabledBackgroundBrush}"
                      Property="Border.Background"/>
                            <Setter TargetName="Border" Value="{StaticResource buttonOutsideBorderDisabledBorderBrush}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="thumbOfficeBlack" TargetType="{x:Type Thumb}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid" Margin="0,0,0,0">
                        <Rectangle x:Name="Rectangle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto"
                       Height="Auto" RadiusX="0" RadiusY="0"
                       Fill="{StaticResource buttonOutsideBorderDefaultBackgroundBrush}"
                       Stroke="{StaticResource buttonOutsideBorderDefaultBorderBrush}"/>
                        <Border x:Name="border" HorizontalAlignment="Stretch" Margin="1,1,1,1" Width="Auto" BorderBrush="#FFFFFFFF"
                    BorderThickness="1,1,1,1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Rectangle" Value="{StaticResource buttonOutsideBorderIsMouseOverBackgroundBrush}"
                      Property="Shape.Fill"/>
                            <Setter TargetName="Rectangle" Value="{StaticResource buttonOutsideBorderDefaultBorderBrush}"
                      Property="Shape.Stroke"/>
                            <Setter TargetName="border" Value="{StaticResource buttonOutsideBorderIsMouseOverBorderBrush}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Rectangle" Value="{StaticResource buttonOutsideBorderDisabledBackgroundBrush}"
                      Property="Shape.Fill"/>
                            <Setter TargetName="Rectangle" Value="{StaticResource buttonOutsideBorderDisabledBorderBrush}"
                      Property="Shape.Stroke"/>
                        </Trigger>
                        <Trigger Property="Thumb.IsDragging" Value="true">
                            <Setter TargetName="Rectangle" Value="{StaticResource buttonOutsideBorderIsPressedBackgroundBrush}"
                      Property="Shape.Fill"/>
                            <Setter TargetName="Rectangle" Value="{StaticResource buttonOutsideBorderDefaultBorderBrush}"
                      Property="Shape.Stroke"/>
                            <Setter TargetName="border" Value="{StaticResource buttonOutsideBorderIsPressedBorderBrush}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="repeatButtonPageUpDownOfficeBlack" TargetType="{x:Type RepeatButton}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderBrush" Value="Transparent"/>
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="Transparent"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="office2007SilverScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Control.Background" Value="{StaticResource repeatButtonBorderDefaultBackgrounBrush}"/>
        <Setter Property="Control.Foreground" Value="#444"/>
        <Setter Property="FrameworkElement.Width"
            Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="FrameworkElement.MinWidth"
            Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <Grid x:Name="GridRoot" Background="{TemplateBinding Control.Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <RepeatButton x:Name="DecreaseRepeat" Style="{StaticResource increaseDecreaseRepeatButtonOffice2007Silver}"
                            Command="ScrollBar.LineUpCommand">
                                <Grid>
                                    <Path x:Name="DecreaseArrow" StrokeThickness="1" Data="M 0,4 L 8,4 4,0 Z"
                        Fill="{TemplateBinding Control.Foreground}" Stroke="{x:Null}"/>
                                </Grid>
                            </RepeatButton>
                            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource thumbOfficeBlack}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Style="{StaticResource repeatButtonPageUpDownOfficeBlack}"
                                Command="ScrollBar.PageDownCommand"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Style="{StaticResource repeatButtonPageUpDownOfficeBlack}"
                                Command="ScrollBar.PageUpCommand"/>
                                </Track.DecreaseRepeatButton>
                            </Track>
                            <RepeatButton x:Name="IncreaseRepeat" Grid.Row="2"
                            Style="{StaticResource increaseDecreaseRepeatButtonOffice2007Silver}"
                            Command="ScrollBar.LineDownCommand">
                                <Grid>
                                    <Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0,0 L 4,4 8,0 Z"
                        Fill="{TemplateBinding Control.Foreground}" Stroke="{x:Null}"/>
                                </Grid>
                            </RepeatButton>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                <Setter Property="FrameworkElement.Width" Value="Auto"/>
                <Setter Property="FrameworkElement.MinWidth" Value="0"/>
                <Setter Property="FrameworkElement.Height"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="FrameworkElement.MinHeight"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}">
                                <Grid x:Name="GridRoot" Background="{TemplateBinding Control.Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton x:Name="DecreaseRepeat" Style="{StaticResource increaseDecreaseRepeatButtonOffice2007Silver}"
                                Command="ScrollBar.LineLeftCommand">
                                        <Grid>
                                            <FrameworkElement.LayoutTransform>
                                                <RotateTransform Angle="-90"/>
                                            </FrameworkElement.LayoutTransform>
                                            <Path x:Name="DecreaseArrow" StrokeThickness="1" Data="M 0,4 L 8,4 4,0 Z"
                            Fill="{TemplateBinding Control.Foreground}" Stroke="{x:Null}"/>
                                        </Grid>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource thumbOfficeBlack}"/>
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton x:Name="PageRight" Style="{StaticResource repeatButtonPageUpDownOfficeBlack}"
                                    Command="ScrollBar.PageRightCommand"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton x:Name="PageLeft" Style="{StaticResource repeatButtonPageUpDownOfficeBlack}"
                                    Command="ScrollBar.PageLeftCommand"/>
                                        </Track.DecreaseRepeatButton>
                                    </Track>
                                    <RepeatButton x:Name="IncreaseRepeat" Grid.Column="2"
                                Style="{StaticResource increaseDecreaseRepeatButtonOffice2007Silver}"
                                Command="ScrollBar.LineRightCommand">
                                        <Grid>
                                            <FrameworkElement.LayoutTransform>
                                                <RotateTransform Angle="-90"/>
                                            </FrameworkElement.LayoutTransform>
                                            <Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0,0 L 4,4 8,0 Z"
                            Fill="{TemplateBinding Control.Foreground}" Stroke="{x:Null}"/>
                                        </Grid>
                                    </RepeatButton>
                                    <Grid Column="1" Opacity="0.3" IsHitTestVisible="false"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>