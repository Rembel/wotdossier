<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converters="clr-namespace:WotDossier.Converters"
                    xmlns:resources="clr-namespace:WotDossier.Resources;assembly=WotDossier.Resources"
                    xmlns:local="clr-namespace:WotDossier.Framework.Controls.DataGrid;assembly=WotDossier.Framework">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DataGridHeaderTemplates.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Color x:Key="GradientStopColor">#D4D7DB</Color>
    <Color x:Key="GradientStartColor">#FFFFFF</Color>
    <Color x:Key="HeaderForeColor">Black</Color>

    <!--<Color x:Key="GradientStopColor">#D4D7DB</Color>
    <Color x:Key="GradientStartColor">#ABABAB</Color>
    <Color x:Key="HeaderForeColor">White</Color>-->

    <DataTemplate x:Key="ascendingSortGlyph">
        <Border Width="15" Height="10">
            <Path Opacity="1" Data="F0 M2 9 L2 9 L13 9 L8 1  Z" Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="descendingSortGlyph">
        <Border Width="15" Height="10">
            <Path Opacity="1"  Data="F0 M2 1 L2 1 L13 1 L13 1 L8 8 Z" Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="selectedRowGlyph">
        <Border Width="10" Height="15">
            <Path Opacity="1"  Data="F0 M1 2 L1 2 L1 13 L1 13 L9 8 Z" Fill="{Binding RelativeSource={RelativeSource Self}, Path=(TextElement.Foreground)}" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="currentItemGlyph">
        <Path Margin="0,4,0,0" Opacity="1" Fill="#6E6D8F" />
    </DataTemplate>

    <!--<Style  x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type DataGridCell}">
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}" Margin="6,3,6,3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="SelectAllButton" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="BorderBrush" Value="#939497" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="{StaticResource GradientStartColor}" Offset="0" />
                    <GradientStop Color="{StaticResource GradientStopColor}" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <!--<Border Margin="0,0,0,0" Background="#6E6D8F" Width="1" HorizontalAlignment="Right" />-->
                        <Polygon Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="8,8,3,3" Opacity="0.15" Fill="Black" Stretch="Uniform" Points="0,10 10,10 10,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="mainBorder" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="{StaticResource GradientStartColor}" Offset="1" />
                                        <GradientStop Color="{StaticResource GradientStopColor}" Offset="0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}" TargetType="{x:Type Button}" BasedOn="{StaticResource SelectAllButton}">
    </Style>

    <Style x:Key="invisibleThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameVerticalBorderWidth}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameHorizontalBorderHeight}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="BorderBrush" Value="#939497" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="{StaticResource GradientStartColor}" Offset="0" />
                    <GradientStop Color="{StaticResource GradientStopColor}" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Grid Margin="2,0,2,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Grid.Column="0"
                                                  Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}">
                                <ToolTipService.ToolTip>
                                    <ToolTip>
                                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"></TextBlock>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                </ContentPresenter>
                                <ContentPresenter Name="SortGlyphPresenter" Grid.Column="1" IsHitTestVisible="false" Content="{x:Null}" />
                            </Grid>
                        </Border>
                        <Thumb Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Width="6" Style="{StaticResource invisibleThumbStyle}" />
                        <Border Margin="0,4,0,4" Background="#6E6D8F" Width="1" HorizontalAlignment="Right" />
                        <Thumb Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Width="6" Style="{StaticResource invisibleThumbStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="mainBorder" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="{StaticResource GradientStartColor}" Offset="1" />
                                        <GradientStop Color="{StaticResource GradientStopColor}" Offset="0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortGlyphPresenter" Value="{StaticResource ascendingSortGlyph}" Property="ContentTemplate" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortGlyphPresenter" Value="{StaticResource descendingSortGlyph}" Property="ContentTemplate" />
                        </Trigger>
                        <Trigger Value="{x:Null}" Property="SortDirection">
                            <Setter TargetName="SortGlyphPresenter" Value="{x:Null}" Property="ContentTemplate" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<DataTemplate x:Key="ColumnHeaderTemplate">
        <StackPanel Orientation="Vertical">
            <Image>
                <Image.Source>
                    <CroppedBitmap Source="pack://application:,,,/WotDossier.Resources;component/Images/award-images.png" SourceRect=""></CroppedBitmap>
                </Image.Source>
            </Image>
            <ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
    </DataTemplate>-->

    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="#A7B0C9" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>

    <Style x:Key="RTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="6,0,6,0"></Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="CTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    
    <Style x:Key="LTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="6,0,6,0"></Setter>
    </Style>

    <Style x:Key="CCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Padding" Value="3,0,0,0" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>

    <!--<Style x:Key="DataGridCellWinPercentStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="#A7CDF0" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Text, Converter={x:Static Converters:PercentToColorConverter.Default}}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="Padding" Value="3,0,0,0" />
    </Style>-->

    <Style x:Key="DataGridCellCenterStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}">
    </Style>

    <Style x:Key="DataGridRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="{StaticResource GradientStartColor}" Offset="0" />
                    <GradientStop Color="{StaticResource GradientStopColor}" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#6E6D8F" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type DataGridRowHeader}">
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsRowSelected" Value="true">
                            <Setter Value="{StaticResource selectedRowGlyph}" Property="ContentTemplate" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <Grid>
                        <Border Name="mainBorder" Background="{TemplateBinding Background}">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <ContentPresenter Name="mainContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                <Control SnapsToDevicePixels="false" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=(Validation.HasError), Converter={x:Static Converters:BoolToVisibilityConverter.Default}}" Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=ValidationErrorTemplate}" />
                            </StackPanel>
                        </Border>
                        <Thumb Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom" Height="6" Cursor="SizeNS" Style="{StaticResource invisibleThumbStyle}" />
                        <Border Margin="4,0,4,0" VerticalAlignment="Bottom" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <Rectangle x:Name="Border"
                 Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                 SnapsToDevicePixels="True" />
            <Polygon x:Name="Arrow"
               HorizontalAlignment="Right"
               VerticalAlignment="Bottom"
               Margin="8,8,3,3"
               Opacity="0.15"
               Fill="Black"
               Stretch="Uniform"
               Points="0,10 10,10 10,0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="office2007SilverDataGrid" TargetType="{x:Type DataGrid}">
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="White" />
        <Setter Property="AlternatingRowBackground" Value="#EDEEF0" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrush}}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="GridLinesVisibility" Value="Vertical" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}"/>
        <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderStyle}" />
    </Style>

    <Style x:Key="office2007SilverFooterDataGrid" TargetType="{x:Type local:FooterDataGrid}">
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="White" />
        <Setter Property="AlternatingRowBackground" Value="#EDEEF0" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrush}}" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="GridLinesVisibility" Value="Vertical" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}"/>
        <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderStyle}" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"  />
        <Setter Property="EnableRowVirtualization" Value="False" />
        <Setter Property="EnableColumnVirtualization" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FooterDataGrid}">
                    <Border Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              SnapsToDevicePixels="True"
                              Padding="{TemplateBinding Padding}">
                        <ScrollViewer Focusable="false" Name="DG_ScrollViewer">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!--Left Column Header Corner -->
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}"
                                                Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                                                Template="{StaticResource SelectAllButtonTemplate}"
                                                Focusable="false"
                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />

                                        <!--Column Headers-->
                                        <DataGridColumnHeadersPresenter Grid.Column="1" 
                                                                            Name="PART_ColumnHeadersPresenter"
                                                                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}"/>

                                        <!--DataGrid content-->
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <!--added a grid here for the vertical scroll bar to resize when row freezes-->
                                        <Grid Grid.Row="1" Grid.Column="2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FooterDataGrid}}, Path=NonFrozenRowsViewportVerticalOffset}"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <ScrollBar Grid.Row="1"
                                                         Name="PART_VerticalScrollBar"
                                                         Orientation="Vertical"
                                                         Maximum="{TemplateBinding ScrollableHeight}"
                                                         ViewportSize="{TemplateBinding ViewportHeight}"
                                                         Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                         Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        </Grid>

                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FooterDataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar Grid.Column="1"
                                                         Name="PART_HorizontalScrollBar"
                                                         Orientation="Horizontal"
                                                         Maximum="{TemplateBinding ScrollableWidth}"
                                                         ViewportSize="{TemplateBinding ViewportWidth}"
                                                         Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                         Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>