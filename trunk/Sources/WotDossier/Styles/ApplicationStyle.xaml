<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:WotDossier.Converters">
    
    <Style x:Key="office2007SilverRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="13" Height="13">
                                    <Ellipse Name="EllipseOutside" Fill="{StaticResource checkBoxOutsideBorderDefaultBackgroundBrush}" Stroke="{StaticResource checkBoxOutsideBorderDefaultBorderBrush}" StrokeThickness="1" />
                                    <Ellipse Name="EllipseInside" Fill="{StaticResource checkBoxInsideBorderDefaultBackgroundBrush}" Stroke="{StaticResource checkBoxInsideBorderDefaultBorderBrush}" StrokeThickness="1" HorizontalAlignment="Stretch" Margin="2,2,2,2" Width="Auto" />
                                    <Ellipse Name="boundEllipse" Fill="{TemplateBinding Background}" Opacity="0.3" />
                                    <Ellipse Name="CheckMark" Margin="4" Fill="{StaticResource glyphDefaultBordeBrush}" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" TextBlock.Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="true" />
                        </BulletDecorator>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsMouseOverBorderBrush}" Property="Stroke" />
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsMouseOverBackgroundBrush}" Property="Fill" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsMouseOverBorderBrush}" Property="Stroke" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsMouseOverBackgroundBrush}" Property="Fill" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsPressedBackgroundBrush}" Property="Fill" />
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsPressedBorderBrush}" Property="Stroke" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsPressedBackgroundBrush}" Property="Fill" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsPressedBorderBrush}" Property="Stroke" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Value="{StaticResource checkBoxForegroundIsEnabledBrush}" Property="Foreground" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsEnabledBorderBrush}" Property="Stroke" />
                            <Setter TargetName="EllipseInside" Value="{StaticResource checkBoxInsideBorderIsEnabledBackgroundBrush}" Property="Fill" />
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsEnabledBackgroundBrush}" Property="Fill" />
                            <Setter TargetName="EllipseOutside" Value="{StaticResource checkBoxOutsideBorderIsEnabledBorderBrush}" Property="Stroke" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    
    <!--<LinearGradientBrush x:Key="buttonOutsideBorderDefaultBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB3B2C9" Offset="1" />
        <GradientStop Color="#FFEDEDF5" Offset="0" />
    </LinearGradientBrush>-->

    <ControlTemplate x:Key="office2007SilverHorizontalProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="TemplateRoot">
            <Border x:Name="PART_Track" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" />
            <Border x:Name="PART_Indicator" HorizontalAlignment="Left" Background="{StaticResource completeProgressBarBackgroundBrush}" BorderBrush="{StaticResource progressBarBackgroundBorderBrush}" BorderThickness="1" CornerRadius="2" />
            <Border HorizontalAlignment="Left" Background="{TemplateBinding Foreground}" CornerRadius="2" Opacity="0.5" Width="{Binding Path=Width, ElementName=PART_Indicator}" />
            <TextBlock Foreground="Black" FontWeight="Medium" 
                    FontSize="14"  Grid.Column="0" Grid.ColumnSpan="2"
                    TextAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ProgressBar}}, Path=Value, 
                        Converter={x:Static converters:PercentFormater.Default}}" />                    
            </TextBlock>
            <Grid x:Name="isIndeterminateGrid" Row="0" RowSpan="2" Opacity="0.7" Margin="2" Visibility="Collapsed">
                <Grid.Background>
                    <LinearGradientBrush MappingMode="RelativeToBoundingBox" EndPoint="1,0.5" StartPoint="-0.2,0.5">
                        <GradientStop x:Name="isIndeterminateStop2" Color="#FFFFFEE4" Offset="0.1" />
                        <GradientStop x:Name="isIndeterminateStop1" Color="#00FFFEE4" Offset="0.2" />
                        <GradientStop x:Name="isIndeterminateStop3" Color="#00FFFEE4" Offset="0" />
                    </LinearGradientBrush>
                </Grid.Background>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter TargetName="TemplateRoot" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsIndeterminate" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard AutoReverse="true" RepeatBehavior="Forever">
                            <DoubleAnimation Storyboard.TargetName="isIndeterminateStop1" Storyboard.TargetProperty="Offset" From="0" To="1" Duration="00:00:01.5" />
                            <DoubleAnimation Storyboard.TargetName="isIndeterminateStop2" Storyboard.TargetProperty="Offset" From="0.1" To="1.1" Duration="00:00:01.5" />
                            <DoubleAnimation Storyboard.TargetName="isIndeterminateStop3" Storyboard.TargetProperty="Offset" From="0.2" To="1.2" Duration="00:00:01.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Setter TargetName="isIndeterminateGrid" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Value="{StaticResource progressBarBakcgroundIsEnabledBackgroundBrush}" Property="Background" />
                <Setter Value="{StaticResource progressBarBackgroundIsEnabledBorderBrush}" Property="BorderBrush" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="office2007SilverProgressBar" TargetType="{x:Type ProgressBar}">
        <!--<Setter Property="Check" Value="true" />-->
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="Background" Value="{StaticResource progressBarBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource progressBarBackgroundBorderBrush}" />
        <Setter Property="Template" Value="{StaticResource office2007SilverHorizontalProgressBarTemplate}" />
    </Style>    

</ResourceDictionary>